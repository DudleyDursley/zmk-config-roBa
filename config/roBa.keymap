#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                        &kp Y        &kp U  &lt 5 I    &kp O    &kp MINUS
&kp A             &kp S         &kp D         &kp F                        &kp G      &kp LS(LG(S))                    &trans           &kp H        &kp J  &kp K      &kp L    &kp P
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B      &kp COLON                        &kp RIGHT_SHIFT  &kp N        &kp M  &kp COMMA  &kp DOT  &kp RIGHT_CONTROL
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 3 INT_HENKAN  &kp SPACE  &lt_to_layer_0 2 INT_MUHENKAN    &kp BACKSPACE    &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp LC(Y)     &kp LC(W)     &trans     &trans     &kp LC(T)                    &kp F1     &kp F2  &kp F3  &kp F4  &kp F5
&kp LC(A)     &kp LC(S)     &trans     &kp LC(F)  &trans     &trans    &trans  &kp F6     &kp F7  &kp F8  &kp F9  &kp F10
&kp LC(Z)     &kp LC(X)     &kp LC(C)  &kp LC(V)  &trans     &trans    &trans  &kp LC(N)  &trans  &trans  &trans  &kp F11
&bt BT_SEL 0  &bt BT_SEL 1  &trans     &trans     &trans     &trans    &trans  &trans                             &kp F12
            >;
        };

        NUM {
            bindings = <
&kp SLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS                                             &kp PERCENT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION
&kp N0     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA   &kp LC(LA(KP_NUMBER_0))    &trans        &kp MINUS    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION
&kp UNDER  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PERIOD  &kp EQUAL                  &kp NUMBER_0  &kp COLON    &kp LESS_THAN         &kp GREATER_THAN       &kp GREATER_THAN       &kp BACKSLASH
&kp MINUS  &trans        &trans        &trans        &trans      &trans                     &trans        &trans                                                                           &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE     &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &kp LS(LG(S))  &kp LC(TAB)         &kp LA(TAB)          &trans               &trans
&kp LC(SPACE)  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &kp LG(T)      &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LG(D)            &trans
&trans         &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &kp LG(LEFT)   &kp LG(UP_ARROW)    &kp LG(DOWN_ARROW)   &kp LG(RIGHT_ARROW)  &trans
&trans         &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };
    };
};
